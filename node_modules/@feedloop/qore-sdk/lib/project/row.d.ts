import { Column } from "./column";
import { Field, FieldType } from "./field/field";
import { ProjectConfig } from "./project";
export declare type APIRow<T = Record<string, any>> = {
    id: string;
} & T;
export declare type Rows<T = Record<string, any>> = {
    nodes: Row<T>[];
    totalCount: number;
};
export declare type Row<T = Record<string, any>> = APIRow<T> & {
    _config: ProjectConfig;
    parentId: string;
    displayField(): string;
    col: <T extends FieldType = FieldType>(field: Field<FieldType>) => Column<T>;
    delete(): Promise<void>;
} & T;
export declare class RowImpl implements Row {
    parentId: string;
    id: string;
    _config: ProjectConfig;
    _row: APIRow;
    constructor(params: {
        config: ProjectConfig;
        parentId: string;
    }, row: APIRow);
    displayField(): any;
    col(field: Field): any;
    delete(): Promise<void>;
}
