import { ProjectConfig } from "./project";
export declare type QoreAuthConfig = {
    id: string;
    type: "qore";
    table: string;
    identifierField: string;
    roleField: string;
};
export declare type PasswordAuthConfig = {
    id: string;
    type: "password";
    table: string;
    identifierField: string;
    roleField: string;
    passwordField: string;
};
export declare type APIAuthConfig = {
    qore?: QoreAuthConfig;
    password?: PasswordAuthConfig;
};
export declare type AuthConfigTypes = keyof APIAuthConfig;
export declare type AuthConfig = APIAuthConfig & {
    _config: ProjectConfig;
    update(values: Omit<PasswordAuthConfig, "id"> | Omit<QoreAuthConfig, "id">): Promise<void>;
};
export declare class AuthConfigImpl implements AuthConfig {
    qore?: QoreAuthConfig;
    password?: PasswordAuthConfig;
    _config: ProjectConfig;
    constructor(params: {
        authConfig: APIAuthConfig;
        config: ProjectConfig;
    });
    update(values: Omit<PasswordAuthConfig, "id"> | Omit<QoreAuthConfig, "id">): Promise<void>;
}
