export declare type UrlParam = {
    organizationId: string;
    projectId: string;
    roleId: string;
    memberId: string;
    workflowId: string;
    tableId: string;
    viewId: string;
    formId: string;
    rowId: string;
    fieldId: string;
    refRowId: string;
    projectAuthId: string;
};
export declare const url: {
    project(params: Pick<UrlParam, "organizationId" | "projectId">): string;
    authConfig(params: Partial<Pick<UrlParam, "projectAuthId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    view(params: Partial<Pick<UrlParam, "viewId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    form(params: Partial<Pick<UrlParam, "formId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    workflow(params: Partial<Pick<UrlParam, "workflowId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    table(params: Partial<Pick<UrlParam, "tableId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    schema(params: Pick<UrlParam, "organizationId" | "projectId">): string;
    field(params: Partial<Pick<UrlParam, "fieldId">> & Pick<UrlParam, "organizationId" | "projectId" | "tableId">): string;
    vield(params: Partial<Pick<UrlParam, "fieldId">> & Pick<UrlParam, "organizationId" | "projectId" | "viewId">): string;
    reorderVieldAfter(params: Partial<Pick<UrlParam, "fieldId">> & Pick<UrlParam, "organizationId" | "projectId" | "viewId"> & {
        afterFieldId: string;
    }): string;
    row(params: Partial<Pick<UrlParam, "rowId">> & Pick<UrlParam, "organizationId" | "projectId" | "tableId">): string;
    rowCount(params: Partial<Pick<UrlParam, "rowId">> & Pick<UrlParam, "organizationId" | "projectId" | "tableId">): string;
    vrow(params: Partial<Pick<UrlParam, "rowId">> & Pick<UrlParam, "organizationId" | "projectId" | "viewId">): string;
    vrowCount(params: Partial<Pick<UrlParam, "rowId">> & Pick<UrlParam, "organizationId" | "projectId" | "viewId">): string;
    addRowRelation(params: Pick<UrlParam, "organizationId" | "projectId" | "tableId" | "fieldId" | "rowId">): string;
    executeRow(params: Pick<UrlParam, "organizationId" | "projectId" | "tableId" | "fieldId" | "rowId">): string;
    removeRowRelation(params: Pick<UrlParam, "organizationId" | "projectId" | "tableId" | "fieldId" | "rowId" | "refRowId">): string;
    projectLogin(params: Pick<UrlParam, "organizationId" | "projectId">): string;
    member(params: Partial<Pick<UrlParam, "memberId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    role(params: Partial<Pick<UrlParam, "roleId">> & Pick<UrlParam, "organizationId" | "projectId">): string;
    sandbox(params: Pick<UrlParam, "organizationId" | "projectId">): string;
};
