import { Project } from "./project";
import { Organization } from "./organization";
export declare type APIUser = {
    email: string;
    token: string;
};
export declare type QoreUser = {
    register(params: {
        email: string;
        password: string;
    }): Promise<void>;
    logout(): void;
    login(email: string, password: string): Promise<void>;
    verify(email: string, activationCode: string): Promise<void>;
    createOrganization(params: {
        name: string;
        category: string;
        size: string;
    }): Promise<string>;
    organizations(limit?: number, offset?: number): Promise<Organization[]>;
    organization(id: string): Promise<Organization | undefined>;
    projects(orgId: string, props?: {
        limit?: number;
        offset?: number;
    }): Promise<Project[]>;
    user(): APIUser | undefined;
};
declare const _default: () => {
    setToken(token: string): void;
    register(params: {
        email: string;
        password: string;
    }): Promise<void>;
    login(email: string, password: string): Promise<void>;
    verify(email: string, activationCode: string): Promise<void>;
    createOrganization(params: {
        name: string;
        category: string;
        size: string;
        subdomain: string;
    }): Promise<string>;
    projects(orgId: string, props: {
        limit?: number;
        offset?: number;
    }): Promise<Project[]>;
    organizations(limit?: number | undefined, offset?: number | undefined): Promise<Organization[]>;
    organization(id: string): Promise<Organization>;
    user: () => APIUser;
    logout: () => void;
};
export default _default;
