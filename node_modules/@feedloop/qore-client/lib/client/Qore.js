"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withHelpers = exports.composeExchanges = exports.QoreProject = exports.defaultOperationConfig = void 0;
var axios_1 = __importDefault(require("axios"));
var Wonka = __importStar(require("wonka"));
var debugExchange_1 = __importDefault(require("../exchanges/debugExchange"));
var networkExchange_1 = __importDefault(require("../exchanges/networkExchange"));
var ViewDriver_1 = require("./ViewDriver");
var cacheExchange_1 = __importDefault(require("../exchanges/cacheExchange"));
exports.defaultOperationConfig = {
    networkPolicy: "network-and-cache",
    pollInterval: 0
};
var QoreProject = /** @class */ (function () {
    function QoreProject(config) {
        var _this = this;
        this.config = config;
        this.axios = axios_1.default.create({
            baseURL: (config.endpoint || "http://localhost:8080") + "/" + this.config.projectId
        });
        this.axios.interceptors.request.use(function (req) {
            var token = _this.config.getToken && _this.config.getToken();
            if (token)
                req.headers["Authorization"] = "Bearer " + token;
            return req;
        });
        this.axios.interceptors.response.use(function handleSuccess(resp) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, resp];
                });
            });
        }, function (error) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.config.onError && this.config.onError(error);
                throw error;
            });
        }); });
    }
    return QoreProject;
}());
exports.QoreProject = QoreProject;
var composeExchanges = function (exchanges) { return function (_a) {
    var client = _a.client, forward = _a.forward;
    return exchanges.reduceRight(function (forward, exchange) {
        return exchange({
            client: client,
            forward: forward
        });
    }, forward);
}; };
exports.composeExchanges = composeExchanges;
function withHelpers(source$, client, operation) {
    source$.toPromise = function () {
        return Wonka.pipe(source$, Wonka.take(1), Wonka.toPromise);
    };
    source$.subscribe = function (callback) {
        return Wonka.subscribe(callback)(source$);
    };
    source$.revalidate = function (config) {
        if (config === void 0) { config = exports.defaultOperationConfig; }
        client.revalidate(__assign(__assign(__assign(__assign({}, exports.defaultOperationConfig), operation), config), { networkPolicy: "network-only" }));
    };
    return source$;
}
exports.withHelpers = withHelpers;
var QoreClient = /** @class */ (function () {
    function QoreClient(config) {
        this.activeOperations = {};
        // @ts-ignore
        this.views = {};
        this.project = new QoreProject(config);
        var _a = Wonka.makeSubject(), next = _a.next, source = _a.source;
        this.operations = source;
        this.nextOperation = next;
        var composedExchange = exports.composeExchanges([cacheExchange_1.default, networkExchange_1.default]);
        this.results = Wonka.share(composedExchange({ client: this, forward: debugExchange_1.default })(this.operations));
        // Keep the stream open
        Wonka.publish(this.results);
    }
    QoreClient.prototype.init = function (schema) {
        var _this = this;
        var views = schema.views.map(function (view) {
            return new ViewDriver_1.ViewDriver(_this, _this.project, view.id, view.tableId, view.fields);
        });
        // @ts-ignore
        this.views = views.reduce(function (map, driver) {
            var _a;
            return (__assign(__assign({}, map), (_a = {}, _a[driver.id] = driver, _a)));
        }, {});
    };
    QoreClient.prototype.authenticate = function (email, password) {
        return __awaiter(this, void 0, void 0, function () {
            var config, resp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        config = {
                            baseURL: this.project.config.endpoint,
                            url: "/project-authenticate/" + this.project.config.projectId,
                            method: "post",
                            headers: {
                                "X-Qore-Authentication": this.project.config.authenticationId
                            },
                            data: { identifier: email, password: password }
                        };
                        return [4 /*yield*/, this.project.axios.request(config)];
                    case 1:
                        resp = _a.sent();
                        return [2 /*return*/, resp.data.token];
                }
            });
        });
    };
    QoreClient.prototype.onOperationStart = function (operation) {
        this.activeOperations[operation.key] =
            (this.activeOperations[operation.key] || 0) + 1;
        this.nextOperation(operation);
    };
    QoreClient.prototype.onOperationEnd = function (operation) {
        this.activeOperations[operation.key] =
            (this.activeOperations[operation.key] || 0) - 1;
        // send teardown command when there are no subscribers anymore
        if (this.activeOperations[operation.key] < 1) {
            this.nextOperation(__assign(__assign({}, operation), { type: "teardown" }));
        }
    };
    QoreClient.prototype.revalidate = function (operation) {
        if ((this.activeOperations[operation.key] || 0) > 0) {
            this.nextOperation(operation);
        }
    };
    QoreClient.prototype.executeOperation = function (operation) {
        var _this = this;
        var _a;
        var resultStream = Wonka.pipe(this.results, Wonka.filter(function (result) { return result.operation.key === operation.key; }));
        // non GET operations should receive only one result
        if (((_a = operation.type) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== "get") {
            return Wonka.pipe(resultStream, Wonka.onStart(function () { return _this.nextOperation(operation); }), Wonka.take(1));
        }
        var teardownStream = Wonka.pipe(this.operations, Wonka.filter(function (op) { return op.key === operation.key && op.type === "teardown"; }));
        resultStream = Wonka.pipe(resultStream, Wonka.takeUntil(teardownStream), Wonka.onStart(function () { return _this.onOperationStart(operation); }), Wonka.onEnd(function () { return _this.onOperationEnd(operation); }));
        if (operation.pollInterval > 0) {
            return Wonka.pipe(Wonka.merge([
                Wonka.fromValue(0),
                Wonka.interval(operation.pollInterval)
            ]), Wonka.switchMap(function () { return resultStream; }));
        }
        return resultStream;
    };
    QoreClient.prototype.execute = function (operation) {
        return withHelpers(this.executeOperation(operation), this, operation);
    };
    return QoreClient;
}());
exports.default = QoreClient;
