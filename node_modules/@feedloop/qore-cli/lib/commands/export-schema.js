"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const prettier_1 = tslib_1.__importDefault(require("prettier"));
const index_1 = tslib_1.__importDefault(require("@feedloop/qore-sdk/lib/project/index"));
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const path_1 = tslib_1.__importDefault(require("path"));
const flags_1 = require("../flags");
const codegen_1 = tslib_1.__importDefault(require("./codegen"));
class ExportSchema extends command_1.Command {
    static async getSchema(configs) {
        const project = index_1.default({
            organizationId: configs.org,
            projectId: configs.project
        });
        await project.auth.signInWithUserToken(configs.token);
        const schema = await project.exportSchema();
        return schema;
    }
    async run() {
        const { args, flags } = this.parse(ExportSchema);
        const configs = await flags_1.promptFlags(flags, ExportSchema.flags);
        const schema = await ExportSchema.getSchema(configs);
        await fs_extra_1.default.writeFile(path_1.default.resolve(process.cwd() + "/qore.schema.json"), prettier_1.default.format(JSON.stringify(Object.assign({ WARNING: codegen_1.default.warningMessage }, schema)), { parser: "json" }), {
            encoding: "utf8"
        });
    }
}
exports.default = ExportSchema;
ExportSchema.description = "export the schema of a given project";
ExportSchema.examples = [`$ qore export-schema`];
ExportSchema.flags = Object.assign({}, flags_1.configFlags);
ExportSchema.args = [{ name: "file" }];
