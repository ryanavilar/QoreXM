"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.promptFlags = exports.configFlags = exports.tokenFlag = exports.orgFlag = exports.projectFlag = void 0;
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const prompts_1 = tslib_1.__importDefault(require("prompts"));
const config_1 = tslib_1.__importDefault(require("./config"));
exports.projectFlag = command_1.flags.string({
    name: "project",
    description: "project id",
    default: () => config_1.default.get("project")
});
exports.orgFlag = command_1.flags.string({
    name: "org",
    description: "organization id",
    default: () => config_1.default.get("org")
});
exports.tokenFlag = command_1.flags.string({
    name: "token",
    description: "organization id",
    default: () => config_1.default.get("token")
});
exports.configFlags = {
    project: exports.projectFlag,
    org: exports.orgFlag,
    token: exports.tokenFlag
};
const promptFlags = async (partialValues, flags) => {
    const remainingConfig = Object.keys(flags).filter(key => !(key in partialValues));
    // @ts-ignore
    const data = await prompts_1.default(remainingConfig
        .map(key => ({ key, field: flags[key] }))
        .map(({ key, field }) => ({
        message: `Enter your ${field === null || field === void 0 ? void 0 : field.description}`,
        name: key,
        type: "text"
    })));
    return Object.assign(Object.assign({}, data), partialValues);
};
exports.promptFlags = promptFlags;
