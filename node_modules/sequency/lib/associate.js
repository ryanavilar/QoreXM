Object.defineProperty(exports, "__esModule", { value: true });
var Associate = /** @class */ (function () {
    function Associate() {
    }
    /**
     * Transforms each element into a key-value pair and returns the results as map. In case of
     * duplicate keys the last key-value pair overrides the other.
     *
     * @param {(value: T) => [K , V]} transform
     * @returns {Map<K, V>}
     */
    Associate.prototype.associate = function (transform) {
        var result = new Map();
        for (var item = this.iterator.next(); !item.done; item = this.iterator.next()) {
            var pair = transform(item.value);
            result.set(pair[0], pair[1]);
        }
        return result;
    };
    return Associate;
}());
exports.Associate = Associate;
//# sourceMappingURL=associate.js.map