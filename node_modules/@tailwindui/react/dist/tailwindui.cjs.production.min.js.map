{"version":3,"file":"tailwindui.cjs.production.min.js","sources":["../src/hooks/use-id.ts","../src/hooks/use-is-initial-render.ts","../src/components/transitions/utils/transition.ts","../src/hooks/use-iso-morphic-effect.ts","../src/utils/match.ts","../src/utils/disposables.ts","../src/utils/once.ts","../src/components/transitions/transition.tsx","../src/hooks/use-is-mounted.ts"],"sourcesContent":["import * as React from 'react'\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  const [id] = React.useState(generateId)\n  return id\n}\n","import * as React from 'react'\n\nexport function useIsInitialRender() {\n  const initial = React.useRef(true)\n\n  React.useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  const d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  const { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  const [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    const [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  done?: (reason: Reason) => void\n) {\n  const d = disposables()\n  const _done = done !== undefined ? once(done) : () => {}\n\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import * as React from 'react'\n\nexport const useIsoMorphicEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | (() => TReturnValue)>\n): TReturnValue {\n  if (value in lookup) {\n    const returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue() : returnValue\n  }\n\n  const error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, match)\n  }\n\n  throw error\n}\n","type ArgumentsOf<F extends Function> = F extends (...args: infer A) => any ? A : never\n\nexport function disposables() {\n  const disposables: Function[] = []\n\n  const api = {\n    requestAnimationFrame(...args: ArgumentsOf<typeof requestAnimationFrame>) {\n      const raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: ArgumentsOf<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: ArgumentsOf<typeof setTimeout>) {\n      const timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      disposables.splice(0).forEach(dispose => dispose())\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  const state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) {\n      return\n    }\n    state.called = true\n    return cb(...args)\n  }\n}\n","import * as React from 'react'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { match } from '../../utils/match'\nimport { Reason, transition } from './utils/transition'\n\ntype ID = number\n\nfunction useSplitClasses(classes: string = '') {\n  return React.useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ntype TransitionContextValues = {\n  show: boolean\n  appear: boolean\n} | null\nconst TransitionContext = React.createContext<TransitionContextValues>(null)\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\ntype TransitionClasses = Partial<{\n  enter: string\n  enterFrom: string\n  enterTo: string\n  leave: string\n  leaveFrom: string\n  leaveTo: string\n}>\n\ntype HTMlTags = keyof JSX.IntrinsicElements\ntype HTMLTagProps<TTag extends HTMlTags> = JSX.IntrinsicElements[TTag]\n\ntype AsShortcut<TTag extends HTMlTags> = {\n  children: React.ReactNode\n  as?: TTag\n} & Omit<HTMLTagProps<TTag>, 'ref'>\n\ntype AsRenderPropFunction = {\n  children: (ref: React.MutableRefObject<any>) => JSX.Element\n}\n\ntype BaseConfig = Partial<{ appear: boolean }>\n\ntype TransitionChildProps<TTag extends HTMlTags> = BaseConfig &\n  (AsShortcut<TTag> | AsRenderPropFunction) &\n  TransitionClasses\n\nfunction useTransitionContext() {\n  const context = React.useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  const context = React.useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.')\n  }\n\n  return context\n}\n\ntype NestingContextValues = {\n  children: React.MutableRefObject<ID[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID) => void\n}\n\nconst NestingContext = React.createContext<NestingContextValues | null>(null)\n\nfunction useNesting(done?: () => void) {\n  const transitionableChildren = React.useRef<ID[]>([])\n  const mounted = useIsMounted()\n\n  const unregister = React.useCallback(\n    (childId: ID) => {\n      const idx = transitionableChildren.current.indexOf(childId)\n\n      if (idx === -1) return\n\n      transitionableChildren.current.splice(idx, 1)\n\n      if (transitionableChildren.current.length <= 0 && mounted.current) {\n        done?.()\n      }\n    },\n    [done, mounted, transitionableChildren]\n  )\n\n  const register = React.useCallback(\n    (childId: ID) => {\n      transitionableChildren.current.push(childId)\n      return () => unregister(childId)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return React.useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction TransitionChild<TTag extends HTMlTags = 'div'>(props: TransitionChildProps<TTag>) {\n  const { children, enter, enterFrom, enterTo, leave, leaveFrom, leaveTo, ...rest } = props\n  const container = React.useRef<HTMLElement | null>(null)\n  const [state, setState] = React.useState(TreeStates.Visible)\n\n  const { show, appear } = useTransitionContext()\n  const { register, unregister } = useParentNesting()\n\n  const initial = useIsInitialRender()\n  const id = useId()\n\n  const isTransitioning = React.useRef(false)\n\n  const nesting = useNesting(\n    React.useCallback(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourserlves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.current) {\n        setState(TreeStates.Hidden)\n        unregister(id)\n      }\n    }, [id, unregister, isTransitioning])\n  )\n\n  useIsoMorphicEffect(() => register(id), [register, id])\n\n  const enterClasses = useSplitClasses(enter)\n  const enterFromClasses = useSplitClasses(enterFrom)\n  const enterToClasses = useSplitClasses(enterTo)\n\n  const leaveClasses = useSplitClasses(leave)\n  const leaveFromClasses = useSplitClasses(leaveFrom)\n  const leaveToClasses = useSplitClasses(leaveTo)\n\n  React.useEffect(() => {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state])\n\n  useIsoMorphicEffect(() => {\n    const node = container.current\n\n    if (!node) return\n\n    // Skipping initial transition\n    if (initial && !appear) return\n\n    isTransitioning.current = true\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, () => {\n          isTransitioning.current = false\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (nesting.children.current.length <= 0) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n          }\n        })\n  }, [\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    initial,\n    appear,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  // Unmount the whole tree\n  if (state === TreeStates.Hidden) return null\n\n  if (typeof children === 'function') {\n    return (\n      <NestingContext.Provider value={nesting}>\n        {(children as AsRenderPropFunction['children'])(container)}\n      </NestingContext.Provider>\n    )\n  }\n\n  const { as: Component = 'div', ...passthroughProps } = rest as AsShortcut<TTag>\n  return (\n    <NestingContext.Provider value={nesting}>\n      {/* @ts-expect-error Expression produces a union type that is too complex to represent. */}\n      <Component {...passthroughProps} ref={container}>\n        {children}\n      </Component>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends HTMlTags = 'div'>(\n  props: TransitionChildProps<TTag> & { show: boolean; appear?: boolean }\n) {\n  const { show, appear = false, ...rest } = props\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  const [state, setState] = React.useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  const nestingBag = useNesting(\n    React.useCallback(() => {\n      setState(TreeStates.Hidden)\n    }, [])\n  )\n\n  const initial = useIsInitialRender()\n  const transitionBag = React.useMemo<TransitionContextValues>(\n    () => ({ show, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  React.useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (nestingBag.children.current.length <= 0) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {match(state, {\n          [TreeStates.Visible]: () => <TransitionChild {...rest} />,\n          [TreeStates.Hidden]: null,\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = TransitionChild\n","import * as React from 'react'\n\nexport function useIsMounted() {\n  const mounted = React.useRef(true)\n\n  React.useEffect(() => {\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n"],"names":["id","generateId","useIsInitialRender","initial","React","current","Reason","useIsoMorphicEffect","window","match","value","lookup","returnValue","error","Error","Object","keys","map","key","join","captureStackTrace","disposables","api","requestAnimationFrame","raf","add","cancelAnimationFrame","nextFrame","args","setTimeout","timer","clearTimeout","cb","push","dispose","splice","forEach","addClasses","node","classes","length","classList","removeClasses","remove","transition","base","from","to","done","state","d","_done","undefined","called","getComputedStyle","transitionDuration","transitionDelay","split","filter","Boolean","v","includes","parseFloat","sort","a","z","durationMs","Finished","Cancelled","waitForTransition","reason","useSplitClasses","className","trim","TreeStates","TransitionContext","NestingContext","useNesting","transitionableChildren","mounted","useIsMounted","unregister","childId","idx","indexOf","register","children","TransitionChild","props","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","rest","container","Visible","setState","context","useTransitionContext","show","appear","useParentNesting","isTransitioning","nesting","Hidden","enterClasses","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","Provider","as","Component","passthroughProps","ref","Transition","nestingBag","transitionBag","Child"],"mappings":"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"}