{"ast":null,"code":"import React, { createContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { client } from '../qoreContext';\nconst authContext = /*#__PURE__*/createContext(null);\n\nconst useCurrentUser = () => {\n  /*\n  * waiting for implementation:\n  const currentMembers = qoreContext.views.currentMember.useListRow();\n  const user = React.useMemo(() => {\n   return currentMembers.data[0];\n  }, [currentMembers.data]);\n  */\n  const router = useRouter();\n  const [user, setUser] = React.useState();\n  React.useEffect(() => {\n    const {\n      endpoint,\n      organizationId,\n      projectId\n    } = client.project.config;\n    client.project.axios.request({\n      baseURL: endpoint,\n      url: `/orgs/${organizationId}/projects/${projectId}/me`,\n      method: 'GET'\n    }).then(resp => {\n      setUser(resp.data.data);\n    }).catch(() => {\n      router.push('/login');\n    });\n  }, []);\n  return user;\n};\n\nexport default useCurrentUser;","map":{"version":3,"sources":["/Users/ryan/Documents/Project/feedloop-template/qoreXM/components/auth.tsx"],"names":["React","createContext","useRouter","client","authContext","useCurrentUser","router","user","setUser","useState","useEffect","endpoint","organizationId","projectId","project","config","axios","request","baseURL","url","method","then","resp","data","catch","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgDC,aAAhD,QAAoE,OAApE;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,SAAqBC,MAArB,QAAkC,gBAAlC;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;;AAEA,MAAMI,cAAc,GAAG,MAAM;AACzB;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,EAAxB;AACAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClB,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,cAAX;AAA2BC,MAAAA;AAA3B,QAAwCV,MAAM,CAACW,OAAP,CAAeC,MAA7D;AACAZ,IAAAA,MAAM,CAACW,OAAP,CAAeE,KAAf,CACKC,OADL,CACiE;AACzDC,MAAAA,OAAO,EAAEP,QADgD;AAEzDQ,MAAAA,GAAG,EAAG,SAAQP,cAAe,aAAYC,SAAU,KAFM;AAGzDO,MAAAA,MAAM,EAAE;AAHiD,KADjE,EAMKC,IANL,CAMWC,IAAD,IAAU;AACZd,MAAAA,OAAO,CAACc,IAAI,CAACC,IAAL,CAAUA,IAAX,CAAP;AACH,KARL,EASKC,KATL,CASW,MAAM;AACTlB,MAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;AACH,KAXL;AAYH,GAdD,EAcG,EAdH;AAeA,SAAOlB,IAAP;AACH,CA1BD;;AA4BA,eAAeF,cAAf","sourcesContent":["import React, {useState, useEffect, useContext, createContext} from 'react';\nimport {useRouter} from 'next/router';\nimport {ProjectSchema} from '@feedloop/qore-client';\nimport qoreContext, {client} from '../qoreContext';\n\nconst authContext = createContext(null);\n\nconst useCurrentUser = () => {\n    /*\n  * waiting for implementation:\n   const currentMembers = qoreContext.views.currentMember.useListRow();\n   const user = React.useMemo(() => {\n     return currentMembers.data[0];\n   }, [currentMembers.data]);\n  */\n    const router = useRouter();\n    const [user, setUser] = React.useState<ProjectSchema['memberDefaultView']['read'] | undefined>();\n    React.useEffect(() => {\n        const {endpoint, organizationId, projectId} = client.project.config;\n        client.project.axios\n            .request<{data: ProjectSchema['memberDefaultView']['read']}>({\n                baseURL: endpoint,\n                url: `/orgs/${organizationId}/projects/${projectId}/me`,\n                method: 'GET',\n            })\n            .then((resp) => {\n                setUser(resp.data.data);\n            })\n            .catch(() => {\n                router.push('/login');\n            });\n    }, []);\n    return user;\n};\n\nexport default useCurrentUser;\n"]},"metadata":{},"sourceType":"module"}