{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ryan/Documents/Project/feedloop-template/qoreXM/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        margin: 100px auto;\\n        width: 320px;\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport { Button, Card, Form, Input, message, Space, Typography } from \"antd\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nexport default function Register() {\n  _s();\n\n  var _this = this,\n      _form$errors$confirmP;\n\n  var form = useForm({\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    mode: \"onChange\"\n  });\n\n  var _React$useState = React.useState({\n    status: \"idle\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var router = useRouter();\n  var handleSubmit = React.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _form$getValues, email, password;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _form$getValues = form.getValues(), email = _form$getValues.email, password = _form$getValues.password;\n              setState({\n                status: \"loading\"\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"/api/register\", {\n                email: email,\n                password: password\n              });\n\n            case 5:\n              message.success(\"Registered, please login\");\n              router.push(\"/login\", \"/login\");\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              setState({\n                status: \"error\",\n                error: _context.t0\n              });\n              message.error(_context.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(_templateObject()),\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: form.control,\n            rules: {\n              required: true\n            },\n            render: function render(_ref2) {\n              var value = _ref2.value,\n                  onChange = _ref2.onChange;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                onChange: onChange,\n                placeholder: \"Email here\",\n                value: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: form.control,\n            rules: {\n              required: true\n            },\n            render: function render(_ref3) {\n              var value = _ref3.value,\n                  onChange = _ref3.onChange;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                onChange: onChange,\n                type: \"password\",\n                placeholder: \"Password here\",\n                value: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Confirm password\",\n          hasFeedback: !!form.errors.confirmPassword,\n          help: (_form$errors$confirmP = form.errors.confirmPassword) === null || _form$errors$confirmP === void 0 ? void 0 : _form$errors$confirmP.message,\n          validateStatus: form.errors.confirmPassword ? \"error\" : undefined,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"confirmPassword\",\n            control: form.control,\n            rules: {\n              required: true,\n              validate: function validate(value) {\n                if (value !== form.getValues().password) return \"Passwords do not match\";\n              }\n            },\n            render: function render(_ref4) {\n              var value = _ref4.value,\n                  onChange = _ref4.onChange;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                onChange: onChange,\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                value: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: !form.formState.isValid || state.status === \"loading\",\n            onClick: handleSubmit,\n            type: \"primary\",\n            children: state.status === \"loading\" ? \"Registering..\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/login\",\n            as: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"sE4KkI3JJzNlLS1tQ4Z8zdhhHtI=\", false, function () {\n  return [useForm, useRouter];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ryan/Documents/Project/feedloop-template/qoreXM/pages/register.tsx"],"names":["React","css","Button","Card","Form","Input","message","Space","Typography","Controller","useForm","useRouter","Link","axios","Register","form","defaultValues","email","password","confirmPassword","mode","useState","status","state","setState","router","handleSubmit","useCallback","e","getValues","post","success","push","error","control","required","value","onChange","errors","undefined","validate","formState","isValid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/css\";\nimport { Button, Card, Form, Input, message, Space, Typography } from \"antd\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nexport default function Register() {\n  const form = useForm<{\n    email: string;\n    password: string;\n    confirmPassword: string;\n  }>({\n    defaultValues: { email: \"\", password: \"\", confirmPassword: \"\" },\n    mode: \"onChange\",\n  });\n  const [state, setState] = React.useState<{\n    status: \"idle\" | \"loading\" | \"success\" | \"error\";\n    error?: Error;\n  }>({ status: \"idle\" });\n  const router = useRouter();\n  const handleSubmit = React.useCallback(\n    async (e: React.MouseEvent<HTMLButtonElement>) => {\n      const { email, password } = form.getValues();\n      setState({ status: \"loading\" });\n      try {\n        await axios.post(\"/api/register\", { email, password });\n        message.success(\"Registered, please login\");\n        router.push(\"/login\", \"/login\");\n      } catch (error) {\n        setState({ status: \"error\", error });\n        message.error(error.message);\n      }\n    },\n    []\n  );\n  return (\n    <div\n      className={css`\n        margin: 100px auto;\n        width: 320px;\n      `}\n    >\n      <Card>\n        <Typography.Title level={4}>Register</Typography.Title>\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Email\">\n            <Controller\n              name=\"email\"\n              control={form.control}\n              rules={{ required: true }}\n              render={({ value, onChange }) => (\n                <Input\n                  onChange={onChange}\n                  placeholder=\"Email here\"\n                  value={value}\n                />\n              )}\n            />\n          </Form.Item>\n          <Form.Item label=\"Password\">\n            <Controller\n              name=\"password\"\n              control={form.control}\n              rules={{\n                required: true,\n              }}\n              render={({ value, onChange }) => (\n                <Input\n                  onChange={onChange}\n                  type=\"password\"\n                  placeholder=\"Password here\"\n                  value={value}\n                />\n              )}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"Confirm password\"\n            hasFeedback={!!form.errors.confirmPassword}\n            help={form.errors.confirmPassword?.message}\n            validateStatus={form.errors.confirmPassword ? \"error\" : undefined}\n          >\n            <Controller\n              name=\"confirmPassword\"\n              control={form.control}\n              rules={{\n                required: true,\n                validate: (value) => {\n                  if (value !== form.getValues().password)\n                    return \"Passwords do not match\";\n                },\n              }}\n              render={({ value, onChange }) => (\n                <Input\n                  onChange={onChange}\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  value={value}\n                />\n              )}\n            />\n          </Form.Item>\n        </Form>\n        <Form.Item>\n          <Space>\n            <Button\n              disabled={!form.formState.isValid || state.status === \"loading\"}\n              onClick={handleSubmit}\n              type=\"primary\"\n            >\n              {state.status === \"loading\" ? \"Registering..\" : \"Register\"}\n            </Button>\n            <Link href=\"/login\" as=\"/login\">\n              <Button>Login</Button>\n            </Link>\n          </Space>\n        </Form.Item>\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}