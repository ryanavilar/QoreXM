{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryan/Documents/Project/feedloop-template/qoreXM/pages/index.tsx\";\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport stc from \"string-to-color\";\nimport { Button, Card, Col, Input, Menu, Row, Skeleton, Typography, Avatar } from \"antd\";\nimport { LoadingOutlined, NumberOutlined, PlusOutlined, UserOutlined } from \"@ant-design/icons\";\nimport qoreContext, { client } from \"../qoreContext\";\nimport dayjs from \"../dayjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport produce from \"immer\";\n\nconst useCurrentUser = () => {\n  /*\n  * waiting for implementation:\n   const currentMembers = qoreContext.views.currentMember.useListRow();\n   const user = React.useMemo(() => {\n     return currentMembers.data[0];\n   }, [currentMembers.data]);\n  */\n  const [user, setUser] = React.useState();\n  React.useEffect(() => {\n    const {\n      endpoint,\n      organizationId,\n      projectId\n    } = client.project.config;\n    client.project.axios.request({\n      baseURL: endpoint,\n      url: `/orgs/${organizationId}/projects/${projectId}/me`,\n      method: \"GET\"\n    }).then(resp => {\n      setUser(resp.data.data);\n    });\n  }, []);\n  return user;\n};\n\nconst ChannelMessages = props => {\n  const channel = qoreContext.views.channelDefaultView.useGetRow(props.id);\n  const channelMessages = qoreContext.views.channelMessages.useListRow({\n    channelID: props.id,\n    \"$by.createdAt\": \"desc\"\n  }, {\n    pollInterval: 2000\n  });\n  const {\n    insertRow\n  } = qoreContext.views.channelMessages.useInsertRow();\n  const currentUser = useCurrentUser();\n  const form = useForm({\n    defaultValues: {\n      message: \"\"\n    },\n    mode: \"onChange\"\n  });\n  const handleSendMessage = React.useCallback(async () => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.id)) return;\n    const {\n      message\n    } = form.getValues();\n    form.reset({\n      message: \"\"\n    });\n    await insertRow({\n      message,\n      from: [currentUser.id],\n      createdAt: new Date(),\n      channel: [props.id]\n    });\n    channelMessages.revalidate();\n  }, [currentUser === null || currentUser === void 0 ? void 0 : currentUser.id, props.id]);\n  const handleEnter = React.useCallback(e => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  }, [handleSendMessage]);\n  if (channel.status === \"loading\" || !channel.data) return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 61\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css`\n        position: relative;\n        width: 100%;\n        height: 100%;\n      `,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`\n          padding: 16px;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n          height: 56px;\n        `,\n      children: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: channel.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`\n          padding: 16px;\n          display: flex;\n          flex-direction: column-reverse;\n          position: absolute;\n          top: 56px;\n          bottom: 64px;\n          left: 0;\n          right: 0;\n          overflow-y: auto;\n        `,\n      children: channelMessages.data.map(channelMessage => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`\n              margin: 6px 0;\n              display: flex;\n            `,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css`\n                margin-right: 12px;\n              `,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"small\",\n            style: {\n              backgroundColor: stc(channelMessage.from.displayField)\n            },\n            children: channelMessage.from.displayField.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css`\n                flex: 1;\n              `,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              flex: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n                strong: true,\n                children: channelMessage.from.displayField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: dayjs(channelMessage.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n            children: channelMessage.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, channelMessage.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`\n          position: absolute;\n          padding: 16px;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          display: flex;\n        `,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`\n            margin-right: 12px;\n          `,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: stc(currentUser === null || currentUser === void 0 ? void 0 : currentUser.email)\n          },\n          children: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`\n            flex: 1;\n            margin-right: 12px;\n          `,\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          control: form.control,\n          name: \"message\",\n          rules: {\n            required: true,\n            min: 1\n          },\n          render: ({\n            value,\n            onChange\n          }) => /*#__PURE__*/_jsxDEV(Input, {\n            onKeyPress: handleEnter,\n            value: value,\n            onChange: onChange,\n            placeholder: \"Type a message..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !form.formState.isValid,\n          onClick: handleSendMessage,\n          type: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\nexport default function Home() {\n  const currentUser = useCurrentUser();\n  const channels = qoreContext.views.channelDefaultView.useListRow();\n  const {\n    insertRow,\n    status\n  } = qoreContext.views.channelDefaultView.useInsertRow();\n  const [state, setState] = React.useState({\n    search: \"\"\n  });\n  const handleSearch = React.useCallback(search => {\n    setState(state => produce(state, draft => {\n      draft.search = search;\n    }));\n  }, []);\n  const filteredChannels = React.useMemo(() => {\n    if (state.search.length) {\n      return channels.data.filter(channel => channel.name.startsWith(state.search));\n    }\n\n    return channels.data;\n  }, [state.search, channels.data]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: css`\n        position: absolute;\n        left: 24px;\n        right: 24px;\n        top: 24px;\n        bottom: 24px;\n        .ant-card-body {\n          padding: 0;\n          width: 100%;\n          height: 100%;\n        }\n      `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`\n          display: flex;\n          height: 100%;\n        `,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`\n            overflow-y: auto;\n            height: 100%;\n            width: 200px;\n          `,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css`\n              padding: 12px;\n              border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n              height: 56px;\n            `,\n          children: /*#__PURE__*/_jsxDEV(Input.Search, {\n            onSearch: handleSearch,\n            placeholder: \"Search or add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          onSelect: async e => {\n            if (e.key === \"item_0\") {\n              if (!currentUser || status === \"loading\") return;\n              const newChannel = await insertRow({\n                name: state.search,\n                member1: [currentUser.id],\n                type: \"channel\"\n              });\n              setState(state => produce(state, draft => {\n                draft.activeKey = newChannel.id;\n                draft.search = \"\";\n              }));\n              channels.revalidate();\n              return;\n            }\n\n            setState(state => produce(state, draft => {\n              draft.activeKey = e.key;\n            }));\n          },\n          children: [state.search && /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: status === \"loading\" ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this),\n            children: [\"New channel \\\"\", state.search, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), filteredChannels.map(channel => /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: channel.type === \"channel\" ? /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this),\n            children: channel.name\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`\n            border-left: 1px solid rgba(0, 0, 0, 0.1);\n            height: 100%;\n            flex: 1;\n            overflow-y: auto;\n          `,\n        children: state.activeKey ? /*#__PURE__*/_jsxDEV(ChannelMessages, {\n          id: state.activeKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css`\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                text-align: center;\n                height: 100%;\n                width: 100%;\n              `,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n              level: 4,\n              children: \"Welcome!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              strong: true,\n              children: \"Please select one of your channels to start messaging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/ryan/Documents/Project/feedloop-template/qoreXM/pages/index.tsx"],"names":["React","css","stc","Button","Card","Col","Input","Menu","Row","Skeleton","Typography","Avatar","LoadingOutlined","NumberOutlined","PlusOutlined","UserOutlined","qoreContext","client","dayjs","Controller","useForm","produce","useCurrentUser","user","setUser","useState","useEffect","endpoint","organizationId","projectId","project","config","axios","request","baseURL","url","method","then","resp","data","ChannelMessages","props","channel","views","channelDefaultView","useGetRow","id","channelMessages","useListRow","channelID","pollInterval","insertRow","useInsertRow","currentUser","form","defaultValues","message","mode","handleSendMessage","useCallback","getValues","reset","from","createdAt","Date","revalidate","handleEnter","e","key","status","name","map","channelMessage","backgroundColor","displayField","charAt","toUpperCase","display","fromNow","email","control","required","min","value","onChange","formState","isValid","Home","channels","state","setState","search","handleSearch","draft","filteredChannels","useMemo","length","filter","startsWith","newChannel","member1","type","activeKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/css\";\nimport stc from \"string-to-color\";\nimport {\n  Button,\n  Card,\n  Col,\n  Input,\n  Menu,\n  Row,\n  Skeleton,\n  Typography,\n  Avatar,\n  Tag,\n  Popconfirm,\n} from \"antd\";\nimport {\n  LoadingOutlined,\n  NumberOutlined,\n  PlusOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport qoreContext, { client } from \"../qoreContext\";\nimport dayjs from \"../dayjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { ProjectSchema } from \"@feedloop/qore-client\";\nimport produce from \"immer\";\nimport { MenuProps } from \"rc-menu\";\n\nconst useCurrentUser = () => {\n  /*\n  * waiting for implementation:\n   const currentMembers = qoreContext.views.currentMember.useListRow();\n   const user = React.useMemo(() => {\n     return currentMembers.data[0];\n   }, [currentMembers.data]);\n  */\n  const [user, setUser] = React.useState<\n    ProjectSchema[\"memberDefaultView\"][\"read\"] | undefined\n  >();\n  React.useEffect(() => {\n    const { endpoint, organizationId, projectId } = client.project.config;\n    client.project.axios\n      .request<{ data: ProjectSchema[\"memberDefaultView\"][\"read\"] }>({\n        baseURL: endpoint,\n        url: `/orgs/${organizationId}/projects/${projectId}/me`,\n        method: \"GET\",\n      })\n      .then((resp) => {\n        setUser(resp.data.data);\n      });\n  }, []);\n  return user;\n};\n\nconst ChannelMessages = (props: { id: string }) => {\n  const channel = qoreContext.views.channelDefaultView.useGetRow(props.id);\n  const channelMessages = qoreContext.views.channelMessages.useListRow(\n    {\n      channelID: props.id,\n      \"$by.createdAt\": \"desc\",\n    },\n    { pollInterval: 2000 }\n  );\n  const { insertRow } = qoreContext.views.channelMessages.useInsertRow();\n  const currentUser = useCurrentUser();\n  const form = useForm<{ message: string }>({\n    defaultValues: { message: \"\" },\n    mode: \"onChange\",\n  });\n  const handleSendMessage = React.useCallback(async () => {\n    if (!currentUser?.id) return;\n    const { message } = form.getValues();\n    form.reset({ message: \"\" });\n    await insertRow({\n      message,\n      from: [currentUser.id],\n      createdAt: new Date(),\n      channel: [props.id],\n    });\n    channelMessages.revalidate();\n  }, [currentUser?.id, props.id]);\n  const handleEnter = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\") {\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n  if (channel.status === \"loading\" || !channel.data) return <Skeleton />;\n  return (\n    <div\n      className={css`\n        position: relative;\n        width: 100%;\n        height: 100%;\n      `}\n    >\n      <div\n        className={css`\n          padding: 16px;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n          height: 56px;\n        `}\n      >\n        <Typography.Title level={4}>{channel.data.name}</Typography.Title>\n      </div>\n      <div\n        className={css`\n          padding: 16px;\n          display: flex;\n          flex-direction: column-reverse;\n          position: absolute;\n          top: 56px;\n          bottom: 64px;\n          left: 0;\n          right: 0;\n          overflow-y: auto;\n        `}\n      >\n        {channelMessages.data.map((channelMessage) => (\n          <div\n            key={channelMessage.id}\n            className={css`\n              margin: 6px 0;\n              display: flex;\n            `}\n          >\n            <div\n              className={css`\n                margin-right: 12px;\n              `}\n            >\n              <Avatar\n                size=\"small\"\n                style={{\n                  backgroundColor: stc(channelMessage.from.displayField),\n                }}\n              >\n                {channelMessage.from.displayField.charAt(0).toUpperCase()}\n              </Avatar>\n            </div>\n            <div\n              className={css`\n                flex: 1;\n              `}\n            >\n              <Row style={{ display: \"flex\" }}>\n                <Col flex={1}>\n                  <Typography.Text strong>\n                    {channelMessage.from.displayField}\n                  </Typography.Text>\n                </Col>\n                <Col>{dayjs(channelMessage.createdAt).fromNow()}</Col>\n              </Row>\n              <Typography.Text>{channelMessage.message}</Typography.Text>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div\n        className={css`\n          position: absolute;\n          padding: 16px;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          display: flex;\n        `}\n      >\n        <div\n          className={css`\n            margin-right: 12px;\n          `}\n        >\n          <Avatar\n            style={{\n              backgroundColor: stc(currentUser?.email),\n            }}\n          >\n            {currentUser?.email.charAt(0).toUpperCase()}\n          </Avatar>\n        </div>\n        <div\n          className={css`\n            flex: 1;\n            margin-right: 12px;\n          `}\n        >\n          <Controller\n            control={form.control}\n            name=\"message\"\n            rules={{ required: true, min: 1 }}\n            render={({ value, onChange }) => (\n              <Input\n                onKeyPress={handleEnter}\n                value={value}\n                onChange={onChange}\n                placeholder=\"Type a message..\"\n              />\n            )}\n          />\n        </div>\n        <div>\n          <Button\n            disabled={!form.formState.isValid}\n            onClick={handleSendMessage}\n            type=\"primary\"\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function Home() {\n  const currentUser = useCurrentUser();\n  const channels = qoreContext.views.channelDefaultView.useListRow();\n  const {\n    insertRow,\n    status,\n  } = qoreContext.views.channelDefaultView.useInsertRow();\n\n  const [state, setState] = React.useState<{\n    activeKey?: string;\n    search: string;\n  }>({ search: \"\" });\n  const handleSearch = React.useCallback((search: string) => {\n    setState((state) =>\n      produce(state, (draft) => {\n        draft.search = search;\n      })\n    );\n  }, []);\n  const filteredChannels = React.useMemo(() => {\n    if (state.search.length) {\n      return channels.data.filter((channel) =>\n        channel.name.startsWith(state.search)\n      );\n    }\n    return channels.data;\n  }, [state.search, channels.data]);\n  return (\n    <Card\n      className={css`\n        position: absolute;\n        left: 24px;\n        right: 24px;\n        top: 24px;\n        bottom: 24px;\n        .ant-card-body {\n          padding: 0;\n          width: 100%;\n          height: 100%;\n        }\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          height: 100%;\n        `}\n      >\n        <div\n          className={css`\n            overflow-y: auto;\n            height: 100%;\n            width: 200px;\n          `}\n        >\n          <div\n            className={css`\n              padding: 12px;\n              border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n              height: 56px;\n            `}\n          >\n            <Input.Search onSearch={handleSearch} placeholder=\"Search or add\" />\n          </div>\n          <Menu\n            onSelect={async (e) => {\n              if (e.key === \"item_0\") {\n                if (!currentUser || status === \"loading\") return;\n                const newChannel = await insertRow({\n                  name: state.search,\n                  member1: [currentUser.id],\n                  type: \"channel\",\n                });\n                setState((state) =>\n                  produce(state, (draft) => {\n                    draft.activeKey = newChannel.id;\n                    draft.search = \"\";\n                  })\n                );\n                channels.revalidate();\n                return;\n              }\n              setState((state) =>\n                produce(state, (draft) => {\n                  draft.activeKey = e.key as string;\n                })\n              );\n            }}\n          >\n            {state.search && (\n              <Menu.Item\n                icon={\n                  status === \"loading\" ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <PlusOutlined />\n                  )\n                }\n              >\n                New channel \"{state.search}\"\n              </Menu.Item>\n            )}\n            {filteredChannels.map((channel) => (\n              <Menu.Item\n                icon={\n                  channel.type === \"channel\" ? (\n                    <NumberOutlined />\n                  ) : (\n                    <UserOutlined />\n                  )\n                }\n                key={channel.id}\n              >\n                {channel.name}\n              </Menu.Item>\n            ))}\n          </Menu>\n        </div>\n        <div\n          className={css`\n            border-left: 1px solid rgba(0, 0, 0, 0.1);\n            height: 100%;\n            flex: 1;\n            overflow-y: auto;\n          `}\n        >\n          {state.activeKey ? (\n            <ChannelMessages id={state.activeKey} />\n          ) : (\n            <div\n              className={css`\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                text-align: center;\n                height: 100%;\n                width: 100%;\n              `}\n            >\n              <div>\n                <Typography.Title level={4}>Welcome!</Typography.Title>\n                <Typography.Text strong>\n                  Please select one of your channels to start messaging\n                </Typography.Text>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}