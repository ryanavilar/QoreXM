{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ryan/Documents/Project/feedloop-template/qoreXM/pages/index.tsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n                display: flex;\\n                align-items: center;\\n                justify-content: center;\\n                text-align: center;\\n                height: 100%;\\n                width: 100%;\\n              \"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n            border-left: 1px solid rgba(0, 0, 0, 0.1);\\n            height: 100%;\\n            flex: 1;\\n            overflow-y: auto;\\n          \"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n              padding: 12px;\\n              border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n              height: 56px;\\n            \"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n            overflow-y: auto;\\n            height: 100%;\\n            width: 200px;\\n          \"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n          display: flex;\\n          height: 100%;\\n        \"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n        position: absolute;\\n        left: 24px;\\n        right: 24px;\\n        top: 24px;\\n        bottom: 24px;\\n        .ant-card-body {\\n          padding: 0;\\n          width: 100%;\\n          height: 100%;\\n        }\\n      \"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n            flex: 1;\\n            margin-right: 12px;\\n          \"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n            margin-right: 12px;\\n          \"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n          position: absolute;\\n          padding: 16px;\\n          bottom: 0;\\n          left: 0;\\n          right: 0;\\n          display: flex;\\n        \"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n                flex: 1;\\n              \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n                margin-right: 12px;\\n              \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n              margin: 6px 0;\\n              display: flex;\\n            \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n          padding: 16px;\\n          display: flex;\\n          flex-direction: column-reverse;\\n          position: absolute;\\n          top: 56px;\\n          bottom: 64px;\\n          left: 0;\\n          right: 0;\\n          overflow-y: auto;\\n        \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n          padding: 16px;\\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n          height: 56px;\\n        \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        position: relative;\\n        width: 100%;\\n        height: 100%;\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport stc from \"string-to-color\";\nimport { Button, Card, Col, Input, Menu, Row, Skeleton, Typography, Avatar } from \"antd\";\nimport { LoadingOutlined, NumberOutlined, PlusOutlined, UserOutlined } from \"@ant-design/icons\";\nimport qoreContext, { client } from \"../qoreContext\";\nimport dayjs from \"../dayjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport produce from \"immer\";\n\nvar useCurrentUser = function useCurrentUser() {\n  _s();\n\n  /*\n  * waiting for implementation:\n   const currentMembers = qoreContext.views.currentMember.useListRow();\n   const user = React.useMemo(() => {\n     return currentMembers.data[0];\n   }, [currentMembers.data]);\n  */\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  React.useEffect(function () {\n    var _client$project$confi = client.project.config,\n        endpoint = _client$project$confi.endpoint,\n        organizationId = _client$project$confi.organizationId,\n        projectId = _client$project$confi.projectId;\n    client.project.axios.request({\n      baseURL: endpoint,\n      url: \"/orgs/\".concat(organizationId, \"/projects/\").concat(projectId, \"/me\"),\n      method: \"GET\"\n    }).then(function (resp) {\n      setUser(resp.data.data);\n    });\n  }, []);\n  return user;\n};\n\n_s(useCurrentUser, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\nvar ChannelMessages = function ChannelMessages(props) {\n  _s2();\n\n  var channel = qoreContext.views.channelDefaultView.useGetRow(props.id);\n  var channelMessages = qoreContext.views.channelMessages.useListRow({\n    channelID: props.id,\n    \"$by.createdAt\": \"desc\"\n  }, {\n    pollInterval: 2000\n  });\n\n  var _qoreContext$views$ch = qoreContext.views.channelMessages.useInsertRow(),\n      insertRow = _qoreContext$views$ch.insertRow;\n\n  var currentUser = useCurrentUser();\n  var form = useForm({\n    defaultValues: {\n      message: \"\"\n    },\n    mode: \"onChange\"\n  });\n  var handleSendMessage = React.useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _form$getValues, message;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (currentUser !== null && currentUser !== void 0 && currentUser.id) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _form$getValues = form.getValues(), message = _form$getValues.message;\n            form.reset({\n              message: \"\"\n            });\n            _context.next = 6;\n            return insertRow({\n              message: message,\n              from: [currentUser.id],\n              createdAt: new Date(),\n              channel: [props.id]\n            });\n\n          case 6:\n            channelMessages.revalidate();\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [currentUser === null || currentUser === void 0 ? void 0 : currentUser.id, props.id]);\n  var handleEnter = React.useCallback(function (e) {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  }, [handleSendMessage]);\n  if (channel.status === \"loading\" || !channel.data) return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 61\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(_templateObject()),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(_templateObject2()),\n      children: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 4,\n        children: channel.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(_templateObject3()),\n      children: channelMessages.data.map(function (channelMessage) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(_templateObject4()),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: css(_templateObject5()),\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"small\",\n              style: {\n                backgroundColor: stc(channelMessage.from.displayField)\n              },\n              children: channelMessage.from.displayField.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css(_templateObject6()),\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                flex: 1,\n                children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n                  strong: true,\n                  children: channelMessage.from.displayField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                children: dayjs(channelMessage.createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              children: channelMessage.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, _this)]\n        }, channelMessage.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(_templateObject7()),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(_templateObject8()),\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: stc(currentUser === null || currentUser === void 0 ? void 0 : currentUser.email)\n          },\n          children: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(_templateObject9()),\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          control: form.control,\n          name: \"message\",\n          rules: {\n            required: true,\n            min: 1\n          },\n          render: function render(_ref2) {\n            var value = _ref2.value,\n                onChange = _ref2.onChange;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              onKeyPress: handleEnter,\n              value: value,\n              onChange: onChange,\n              placeholder: \"Type a message..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !form.formState.isValid,\n          onClick: handleSendMessage,\n          type: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(ChannelMessages, \"A3xGPFbkQrfIn20M+btU0IRPKn0=\", true, function () {\n  return [useCurrentUser, useForm];\n});\n\n_c = ChannelMessages;\nexport default function Home() {\n  _s3();\n\n  var _this2 = this;\n\n  var currentUser = useCurrentUser();\n  var channels = qoreContext.views.channelDefaultView.useListRow();\n\n  var _qoreContext$views$ch2 = qoreContext.views.channelDefaultView.useInsertRow(),\n      insertRow = _qoreContext$views$ch2.insertRow,\n      status = _qoreContext$views$ch2.status;\n\n  var _React$useState3 = React.useState({\n    search: \"\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var handleSearch = React.useCallback(function (search) {\n    setState(function (state) {\n      return produce(state, function (draft) {\n        draft.search = search;\n      });\n    });\n  }, []);\n  var filteredChannels = React.useMemo(function () {\n    if (state.search.length) {\n      return channels.data.filter(function (channel) {\n        return channel.name.startsWith(state.search);\n      });\n    }\n\n    return channels.data;\n  }, [state.search, channels.data]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: css(_templateObject10()),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(_templateObject11()),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(_templateObject12()),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(_templateObject13()),\n          children: /*#__PURE__*/_jsxDEV(Input.Search, {\n            onSearch: handleSearch,\n            placeholder: \"Search or add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          onSelect: /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n              var newChannel;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(e.key === \"item_0\")) {\n                        _context2.next = 9;\n                        break;\n                      }\n\n                      if (!(!currentUser || status === \"loading\")) {\n                        _context2.next = 3;\n                        break;\n                      }\n\n                      return _context2.abrupt(\"return\");\n\n                    case 3:\n                      _context2.next = 5;\n                      return insertRow({\n                        name: state.search,\n                        member1: [currentUser.id],\n                        type: \"channel\"\n                      });\n\n                    case 5:\n                      newChannel = _context2.sent;\n                      setState(function (state) {\n                        return produce(state, function (draft) {\n                          draft.activeKey = newChannel.id;\n                          draft.search = \"\";\n                        });\n                      });\n                      channels.revalidate();\n                      return _context2.abrupt(\"return\");\n\n                    case 9:\n                      setState(function (state) {\n                        return produce(state, function (draft) {\n                          draft.activeKey = e.key;\n                        });\n                      });\n\n                    case 10:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }(),\n          children: [state.search && /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: status === \"loading\" ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this),\n            children: [\"New channel \\\"\", state.search, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), filteredChannels.map(function (channel) {\n            return /*#__PURE__*/_jsxDEV(Menu.Item, {\n              icon: channel.type === \"channel\" ? /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, _this2) : /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, _this2),\n              children: channel.name\n            }, channel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, _this2);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(_templateObject14()),\n        children: state.activeKey ? /*#__PURE__*/_jsxDEV(ChannelMessages, {\n          id: state.activeKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(_templateObject15()),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n              level: 4,\n              children: \"Welcome!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              strong: true,\n              children: \"Please select one of your channels to start messaging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Home, \"8Y93g1kaGWLPPJc1+PLaY0FlHk8=\", true, function () {\n  return [useCurrentUser];\n});\n\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelMessages\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/ryan/Documents/Project/feedloop-template/qoreXM/pages/index.tsx"],"names":["React","css","stc","Button","Card","Col","Input","Menu","Row","Skeleton","Typography","Avatar","LoadingOutlined","NumberOutlined","PlusOutlined","UserOutlined","qoreContext","client","dayjs","Controller","useForm","produce","useCurrentUser","useState","user","setUser","useEffect","project","config","endpoint","organizationId","projectId","axios","request","baseURL","url","method","then","resp","data","ChannelMessages","props","channel","views","channelDefaultView","useGetRow","id","channelMessages","useListRow","channelID","pollInterval","useInsertRow","insertRow","currentUser","form","defaultValues","message","mode","handleSendMessage","useCallback","getValues","reset","from","createdAt","Date","revalidate","handleEnter","e","key","status","name","map","channelMessage","backgroundColor","displayField","charAt","toUpperCase","display","fromNow","email","control","required","min","value","onChange","formState","isValid","Home","channels","search","state","setState","handleSearch","draft","filteredChannels","useMemo","length","filter","startsWith","member1","type","newChannel","activeKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/css\";\nimport stc from \"string-to-color\";\nimport {\n  Button,\n  Card,\n  Col,\n  Input,\n  Menu,\n  Row,\n  Skeleton,\n  Typography,\n  Avatar,\n  Tag,\n  Popconfirm,\n} from \"antd\";\nimport {\n  LoadingOutlined,\n  NumberOutlined,\n  PlusOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport qoreContext, { client } from \"../qoreContext\";\nimport dayjs from \"../dayjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { ProjectSchema } from \"@feedloop/qore-client\";\nimport produce from \"immer\";\nimport { MenuProps } from \"rc-menu\";\n\nconst useCurrentUser = () => {\n  /*\n  * waiting for implementation:\n   const currentMembers = qoreContext.views.currentMember.useListRow();\n   const user = React.useMemo(() => {\n     return currentMembers.data[0];\n   }, [currentMembers.data]);\n  */\n  const [user, setUser] = React.useState<\n    ProjectSchema[\"memberDefaultView\"][\"read\"] | undefined\n  >();\n  React.useEffect(() => {\n    const { endpoint, organizationId, projectId } = client.project.config;\n    client.project.axios\n      .request<{ data: ProjectSchema[\"memberDefaultView\"][\"read\"] }>({\n        baseURL: endpoint,\n        url: `/orgs/${organizationId}/projects/${projectId}/me`,\n        method: \"GET\",\n      })\n      .then((resp) => {\n        setUser(resp.data.data);\n      });\n  }, []);\n  return user;\n};\n\nconst ChannelMessages = (props: { id: string }) => {\n  const channel = qoreContext.views.channelDefaultView.useGetRow(props.id);\n  const channelMessages = qoreContext.views.channelMessages.useListRow(\n    {\n      channelID: props.id,\n      \"$by.createdAt\": \"desc\",\n    },\n    { pollInterval: 2000 }\n  );\n  const { insertRow } = qoreContext.views.channelMessages.useInsertRow();\n  const currentUser = useCurrentUser();\n  const form = useForm<{ message: string }>({\n    defaultValues: { message: \"\" },\n    mode: \"onChange\",\n  });\n  const handleSendMessage = React.useCallback(async () => {\n    if (!currentUser?.id) return;\n    const { message } = form.getValues();\n    form.reset({ message: \"\" });\n    await insertRow({\n      message,\n      from: [currentUser.id],\n      createdAt: new Date(),\n      channel: [props.id],\n    });\n    channelMessages.revalidate();\n  }, [currentUser?.id, props.id]);\n  const handleEnter = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\") {\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n  if (channel.status === \"loading\" || !channel.data) return <Skeleton />;\n  return (\n    <div\n      className={css`\n        position: relative;\n        width: 100%;\n        height: 100%;\n      `}\n    >\n      <div\n        className={css`\n          padding: 16px;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n          height: 56px;\n        `}\n      >\n        <Typography.Title level={4}>{channel.data.name}</Typography.Title>\n      </div>\n      <div\n        className={css`\n          padding: 16px;\n          display: flex;\n          flex-direction: column-reverse;\n          position: absolute;\n          top: 56px;\n          bottom: 64px;\n          left: 0;\n          right: 0;\n          overflow-y: auto;\n        `}\n      >\n        {channelMessages.data.map((channelMessage) => (\n          <div\n            key={channelMessage.id}\n            className={css`\n              margin: 6px 0;\n              display: flex;\n            `}\n          >\n            <div\n              className={css`\n                margin-right: 12px;\n              `}\n            >\n              <Avatar\n                size=\"small\"\n                style={{\n                  backgroundColor: stc(channelMessage.from.displayField),\n                }}\n              >\n                {channelMessage.from.displayField.charAt(0).toUpperCase()}\n              </Avatar>\n            </div>\n            <div\n              className={css`\n                flex: 1;\n              `}\n            >\n              <Row style={{ display: \"flex\" }}>\n                <Col flex={1}>\n                  <Typography.Text strong>\n                    {channelMessage.from.displayField}\n                  </Typography.Text>\n                </Col>\n                <Col>{dayjs(channelMessage.createdAt).fromNow()}</Col>\n              </Row>\n              <Typography.Text>{channelMessage.message}</Typography.Text>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div\n        className={css`\n          position: absolute;\n          padding: 16px;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          display: flex;\n        `}\n      >\n        <div\n          className={css`\n            margin-right: 12px;\n          `}\n        >\n          <Avatar\n            style={{\n              backgroundColor: stc(currentUser?.email),\n            }}\n          >\n            {currentUser?.email.charAt(0).toUpperCase()}\n          </Avatar>\n        </div>\n        <div\n          className={css`\n            flex: 1;\n            margin-right: 12px;\n          `}\n        >\n          <Controller\n            control={form.control}\n            name=\"message\"\n            rules={{ required: true, min: 1 }}\n            render={({ value, onChange }) => (\n              <Input\n                onKeyPress={handleEnter}\n                value={value}\n                onChange={onChange}\n                placeholder=\"Type a message..\"\n              />\n            )}\n          />\n        </div>\n        <div>\n          <Button\n            disabled={!form.formState.isValid}\n            onClick={handleSendMessage}\n            type=\"primary\"\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function Home() {\n  const currentUser = useCurrentUser();\n  const channels = qoreContext.views.channelDefaultView.useListRow();\n  const {\n    insertRow,\n    status,\n  } = qoreContext.views.channelDefaultView.useInsertRow();\n\n  const [state, setState] = React.useState<{\n    activeKey?: string;\n    search: string;\n  }>({ search: \"\" });\n  const handleSearch = React.useCallback((search: string) => {\n    setState((state) =>\n      produce(state, (draft) => {\n        draft.search = search;\n      })\n    );\n  }, []);\n  const filteredChannels = React.useMemo(() => {\n    if (state.search.length) {\n      return channels.data.filter((channel) =>\n        channel.name.startsWith(state.search)\n      );\n    }\n    return channels.data;\n  }, [state.search, channels.data]);\n  return (\n    <Card\n      className={css`\n        position: absolute;\n        left: 24px;\n        right: 24px;\n        top: 24px;\n        bottom: 24px;\n        .ant-card-body {\n          padding: 0;\n          width: 100%;\n          height: 100%;\n        }\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          height: 100%;\n        `}\n      >\n        <div\n          className={css`\n            overflow-y: auto;\n            height: 100%;\n            width: 200px;\n          `}\n        >\n          <div\n            className={css`\n              padding: 12px;\n              border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n              height: 56px;\n            `}\n          >\n            <Input.Search onSearch={handleSearch} placeholder=\"Search or add\" />\n          </div>\n          <Menu\n            onSelect={async (e) => {\n              if (e.key === \"item_0\") {\n                if (!currentUser || status === \"loading\") return;\n                const newChannel = await insertRow({\n                  name: state.search,\n                  member1: [currentUser.id],\n                  type: \"channel\",\n                });\n                setState((state) =>\n                  produce(state, (draft) => {\n                    draft.activeKey = newChannel.id;\n                    draft.search = \"\";\n                  })\n                );\n                channels.revalidate();\n                return;\n              }\n              setState((state) =>\n                produce(state, (draft) => {\n                  draft.activeKey = e.key as string;\n                })\n              );\n            }}\n          >\n            {state.search && (\n              <Menu.Item\n                icon={\n                  status === \"loading\" ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <PlusOutlined />\n                  )\n                }\n              >\n                New channel \"{state.search}\"\n              </Menu.Item>\n            )}\n            {filteredChannels.map((channel) => (\n              <Menu.Item\n                icon={\n                  channel.type === \"channel\" ? (\n                    <NumberOutlined />\n                  ) : (\n                    <UserOutlined />\n                  )\n                }\n                key={channel.id}\n              >\n                {channel.name}\n              </Menu.Item>\n            ))}\n          </Menu>\n        </div>\n        <div\n          className={css`\n            border-left: 1px solid rgba(0, 0, 0, 0.1);\n            height: 100%;\n            flex: 1;\n            overflow-y: auto;\n          `}\n        >\n          {state.activeKey ? (\n            <ChannelMessages id={state.activeKey} />\n          ) : (\n            <div\n              className={css`\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                text-align: center;\n                height: 100%;\n                width: 100%;\n              `}\n            >\n              <div>\n                <Typography.Title level={4}>Welcome!</Typography.Title>\n                <Typography.Text strong>\n                  Please select one of your channels to start messaging\n                </Typography.Text>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}