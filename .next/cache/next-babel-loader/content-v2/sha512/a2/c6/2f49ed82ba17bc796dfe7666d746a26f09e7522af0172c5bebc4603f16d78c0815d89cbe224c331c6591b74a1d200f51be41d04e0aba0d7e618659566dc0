{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { QoreClient } from \"@feedloop/qore-client\";\nimport createQoreContext from \"@feedloop/qore-react\";\nimport Cookies from \"js-cookie\";\nimport config from \"./qore.config.json\";\nimport schema from \"./qore.schema.json\";\nexport const client = new QoreClient(_objectSpread(_objectSpread({}, config), {}, {\n  getToken: () => Cookies.get(\"token\"),\n  onError: error => {\n    switch (error.message) {\n      case \"Request failed with status code 401\":\n        if (window.location.pathname !== \"/login\" && false) {\n          window.location.href = \"/login\";\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n}));\nclient.init(schema);\nconst qoreContext = createQoreContext(client);\nexport default qoreContext;","map":{"version":3,"sources":["/Users/ryan/Documents/Project/feedloop-template/qoreXM/qoreContext.ts"],"names":["QoreClient","createQoreContext","Cookies","config","schema","client","getToken","get","onError","error","message","window","location","pathname","href","init","qoreContext"],"mappings":";;;;;;AAAA,SAAwBA,UAAxB,QAA0C,uBAA1C;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,MAAMC,MAAM,GAAG,IAAIL,UAAJ,iCACjBG,MADiB;AAEpBG,EAAAA,QAAQ,EAAE,MAAMJ,OAAO,CAACK,GAAR,CAAY,OAAZ,CAFI;AAGpBC,EAAAA,OAAO,EAAGC,KAAD,IAAW;AAClB,YAAQA,KAAK,CAACC,OAAd;AACE,WAAK,qCAAL;AACE,YACEC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAA7B,SADF,EAGE;AACAF,UAAAA,MAAM,CAACC,QAAP,CAAgBE,IAAhB,GAAuB,QAAvB;AACD;;AACD;;AAEF;AACE;AAXJ;AAaD;AAjBmB,GAAf;AAmBPT,MAAM,CAACU,IAAP,CAAYX,MAAZ;AAEA,MAAMY,WAAW,GAAGf,iBAAiB,CAACI,MAAD,CAArC;AACA,eAAeW,WAAf","sourcesContent":["import { ProjectSchema, QoreClient } from \"@feedloop/qore-client\";\nimport createQoreContext from \"@feedloop/qore-react\";\nimport Cookies from \"js-cookie\";\nimport config from \"./qore.config.json\";\nimport schema from \"./qore.schema.json\";\n\nexport const client = new QoreClient<ProjectSchema>({\n  ...config,\n  getToken: () => Cookies.get(\"token\"),\n  onError: (error) => {\n    switch (error.message) {\n      case \"Request failed with status code 401\":\n        if (\n          window.location.pathname !== \"/login\" &&\n          process.env.NODE_ENV === \"production\"\n        ) {\n          window.location.href = \"/login\";\n        }\n        break;\n\n      default:\n        break;\n    }\n  },\n});\nclient.init(schema as any);\n\nconst qoreContext = createQoreContext(client);\nexport default qoreContext;\n"]},"metadata":{},"sourceType":"module"}